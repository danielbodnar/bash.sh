# HISTORY

- v20230126:
  - improved lazy-loader to load kebab case func and files
  - improved `commander()`

- v20230120:
  - improved `bash.config`
  - improved `load_import_files`
  - func name `in_jetbrain` changed to `in_jetbrains`
  - added: `in_homebrew`, `pmid`
  - improved: `osid`, ...

- v20230111:
  - improved `_my_main_do_sth`
  - fixed test for `HAS_END` and `VERBOSE`
  - added `tip`, `err`, and `pad`
  - fixed `fn_name/_dyn` in mac
  - added `in_provisioning` stub codes
  - more improvments and bug fixes

- v20230109:
  - fixed checker by setting `HAS_END=1`
  - added `pad()`: usage like `cat 1.txt|pad 4`

- v20230108:
  - add comment for HAS_END testing at ending of the whole provisioning script:
    > Why use `{ [ $# -eq 0 ] && :; }`?
    >   While bash.sh/provision.sh/ops was been invoking with command-line args,
    >   we would assume that's normal status if `trap` caluse doesn't catch any errors.
    >   So, a failure test on HAS_END shouldn't take bad effect onto the whole provisioning script exit status.
    > You might always change this logic or comment the following line, no obsezzing on it.
    > Or, if your provisioning script with bash.sh has not any entranance arguments,
    > disabling this logic is still simple by defining HAS_END=1.
  - added new file `after.sh.sample`;
  - fixed the location testing of `after.sh`

- v20230107:
  - added in_vm, lsb_release_cs, uname_kernel;

- v20230104:
  - add'd: strip_l, strip_r
  - imp'd: make `commander` fit for zsh too

- v20230101:
  - load after.sh; imp: load_import_files & load_files
  - added into tool.sh: zsh_theme, realod_zsh_autocomp, ..., print_path, print_fpath

- v20221217:
  - imp'd, comments

- v20221104:
  - added: `url_exists`, `git_clone`

- v20221027:
  - imp'd: fixed `realpathx()` under macOS

- v20221021:
  - added: `default_dev`, `netmask`, `gw`, `lanip`, 'lanip6', `wanip`, `wanip6`, ...
  - imp'd: fixed `realpathx()` under macOS

- v20221020:
  - bash.sh use bump() to upgrade the release now
  - imp'd: fixed `realpathx()` under macOS

- v20221019:
  - added: `BASH_SH_VERSION`(=`v20221019`,...)
  - imp'd: better `realpathx()` under macOS
  - imp'd: solved `$SCRIPT` and `$CD` if the script is a symbolic link itself.

- v20220911:
  - fixed: `in_sourcing' under zsh

- v20220909:
  - fixed: `in_sourcing',`is_bash`,`in_jetbrain`

- v20220908:
  - fixed: `debug_info` cannot print '-' sometimes, replace with '.'
  - fixed: `in_sourcing',`is_bash`,`in_jetbrain`
  - improved: bash.config can be directly sourced in from .zshrc

- v20220822:
  - fixed: `is_git_dirty`, added `is_git_clean`
  - updated: bash-lite.sh

- v20220807:
  - imp'd/fixed: dbg the warnings in `load_import_files`/`load_env_files`
  - imp'd: safer `is_zsh`
  - added: `is_win` (=`in_wsl`)
  - added: `in_vscode`, `in_jetbrains` (for clion/goland/...)
  - imp'd: disable stdout for testing by `fn_exists`/`fn_builtin_exists`/`fn_aliased_exists`
  - imp'd: better `debug_info`
  - imp'd: beeter `main_do_sth`

- v20220516:
  - improved/fixed: adapted into vagrant better

- v20220513:
  - improved/fixed: osid, is_debian_series, ...
  - added: osidlike, oscodename, ...
  - fixed: fn_exists
  - added: load_import_files && load_env_files to load and source extra files
  - more...

- ...
- 20190215
- 20180509
- ...

- Initial Commit
